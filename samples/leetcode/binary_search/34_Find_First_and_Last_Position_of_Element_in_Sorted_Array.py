#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Find First and Last Position of Element in Sorted Array (Поиск первой и последней позиции элемента в отсортированном
списке)
"""

# ######################################################################################################################
# Импорт необходимых инструментов
# ######################################################################################################################

# Подавление Warning
import warnings
for warn in [UserWarning, FutureWarning]: warnings.filterwarnings('ignore', category = warn)

from dataclasses import dataclass # Класс данных

from typing import List # Типы данных

@dataclass
class Solution:

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __post_init__(self):
        pass

    # ------------------------------------------------------------------------------------------------------------------
    # Вспомогательные методы
    # ------------------------------------------------------------------------------------------------------------------

    @staticmethod
    def binary_search(nums: List[int], target: int, bias: str = 'first') -> int:
        """Поиск первой или последней позиции элемента в отсортированном списке

        Args:
            nums (List[int]): Список чисел
            target (int): Искомое число
            bias (str): **first** - первая позиция, **last** - последняя позиция

        Returns:
            int: Индекс первой или последней позиции искомого числа
        """

        low = 0 # Старт поиска
        high = len(nums) - 1 # Конец поиска

        idx = -1 # Индекс искомого числа по умолчанию

        while low <= high:
            mid = int((high - low) / 2 + low) # Индекс среднего значения в списке

            guess = nums[mid] # Число

            if guess == target:
                idx = mid
                if bias == 'first': high = mid - 1
                elif bias == 'last': low = mid + 1
                else: return -1
            elif guess > target: high = mid - 1
            else: low = mid + 1

        return idx

    # ------------------------------------------------------------------------------------------------------------------
    # Решение задачи (https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/
    # ------------------------------------------------------------------------------------------------------------------
    @staticmethod
    def search_range(nums: List[int], target: int) -> List[int]:
        """Поиск первой и последней позиции элемента в отсортированном списке

        Args:
            nums (List[int]): Список чисел
            target (int): Искомое число

        Returns:
            List[int]: Индексы первой и последней позиции искомого числа
        """

        first = Solution.binary_search(nums, target, bias = 'first')
        last = Solution.binary_search(nums, target, bias = 'last')

        return [first, last]


# ######################################################################################################################
# Выполняем только в том случае, если файл запущен сам по себе
# ######################################################################################################################

if __name__ == "__main__":
    lists = [
        ([5, 7, 7, 8, 8, 10], 8),
        ([5, 7, 7, 8, 8, 10], 6),
        ([0, 0, 0, 1, 2, 2], 0),
        ([], 0)
    ]

    for curr in lists: print(Solution.search_range(curr[0], curr[1]))
